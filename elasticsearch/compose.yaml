services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: es01-container
    restart: unless-stopped
    ports:
      - "9201:9200"
    environment:
#      - discovery.type=single-node
      - node.name=es01
      - cluster.name=elastic-cluster
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es02,es03
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: es02-container
    restart: unless-stopped
    ports:
      - "9202:9200"
    environment:
#      - discovery.type=single-node
      - node.name=es02
      - cluster.name=elastic-cluster
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es01,es03
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: es03-container
    restart: unless-stopped
    ports:
      - "9203:9200"
    environment:
#      - discovery.type=single-node
      - node.name=es03
      - cluster.name=elastic-cluster
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es02,es01
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.2
    restart: unless-stopped
    depends_on:
      - es01
      - es02
      - es03
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=["http://es01:9200","http://es02:9200","http://es03:9200"]

  postgres:
    image: 'postgres:latest'
    container_name: 'es_container'
    restart: no
    environment:
      - 'POSTGRES_DB=es_database'
      - 'POSTGRES_USER=admin'
      - 'POSTGRES_PASSWORD=password'
    ports:
      - '5443:5432'
    volumes:
      - ./src/test/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro