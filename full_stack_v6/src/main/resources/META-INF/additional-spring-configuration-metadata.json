{
  "properties": [
    {
      "name": "frontend.app.host",
      "type": "java.lang.String",
      "description": "Host URL of the frontend application."
    },
    {
      "name": "jwt.secret",
      "type": "java.lang.String",
      "description": "Secret key to sign and then validate JWT tokens."
    },
    {
      "name": "jwt.expiration.ms",
      "type": "java.lang.String",
      "description": "How long the JWT should be valid for (in milliseconds)."
    },
    {
      "name": "jwt.refresh.expiration.ms",
      "type": "java.lang.String",
      "description": "How long the Refresh Token, also a JWT, should be valid for (in milliseconds)."
    },
    {
      "name": "jwt.refresh.token.cookie.max.age",
      "type": "java.lang.String",
      "description": "How long the Cookie containing the Refresh Token should be valid for (in milliseconds). Should be same as jwt.refresh.expiration.ms."
    },
    {
      "name": "authorization.token.header.name",
      "type": "java.lang.String",
      "description": "Authorization token header name, e.g. 'Authorization'.",
      "defaultValue": "Authorization"
    },
    {
      "name": "authorization.token.header.value.prefix",
      "type": "java.lang.String",
      "description": "Prefix for the Authorization token header value, e.g. 'Bearer'.",
      "defaultValue": "Bearer "
    },
    {
      "name": "jwt.refresh.token.cookie.http.only",
      "type": "java.lang.Boolean",
      "description": "Whether the Refresh Token Cookie should be secure or not, i.e., https only.",
      "defaultValue": true
    },
    {
      "name": "jwt.refresh.token.cookie.domain",
      "type": "java.lang.String",
      "description": "Domain for the Refresh Token Cookie, if omitted, the Cookie will be set to 'host-only'."
    }
  ]
}